      - name: Prepare remotion metadata
        run: |
          mkdir -p tmp

          # Build metadata.json reliably with python (uses values expanded by GH at runtime)
          python3 - <<'PY'
import json, glob, sys
# inputs are expanded by GH Actions into the script at runtime
topic = "${{ github.event.inputs.topic }}"
seconds = float("${{ github.event.inputs.seconds_per_shot }}")
fps = int("${{ github.event.inputs.fps }}")

# find images output (absolute or relative to repo root)
imgs = sorted(glob.glob("outputs/gha_short_work/scene_*.png"))
# Remotion will be executed from remotion/ so reference images with relative path from remotion
images_for_remotion = [ "../" + p.replace("\\\\", "/") for p in imgs ]

data = {
  "title": f"Sport Sync â€” {topic}",
  "subtitle": "Discover your sport identity",
  "seconds": seconds,
  "fps": fps,
  "images": images_for_remotion
}

with open("tmp/metadata.json", "w", encoding="utf-8") as f:
    json.dump(data, f, ensure_ascii=False, indent=2)

print("=== tmp/metadata.json ===")
print(open("tmp/metadata.json", encoding="utf-8").read())
PY

      - name: Install Node & Remotion dependencies
        run: |
          curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          cd remotion
          npm ci

      - name: Render Remotion video
        run: |
          cd remotion
          # pass metadata.json content as --props to remotion render
          # note: we call remotion with the composition/component name; adjust if your component id differs
          npx remotion render src/VideoRoot.jsx ../outputs/gha_short_work/video_from_remotion.mp4 --props "$(cat ../tmp/metadata.json)"
