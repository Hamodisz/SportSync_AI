# voice_generator.py

import os
from pathlib import Path
from gtts import gTTS
import logging

# ๐ ุชุญุฏูุฏ ููุงู ุญูุธ ุงูุตูุช
VOICE_OUTPUT = Path("content_studio/ai_voice/voices/final_voice.mp3")
VOICE_OUTPUT.parent.mkdir(parents=True, exist_ok=True)

def generate_voice_from_script(script_text: str, lang: str = "en") -> str:
    """
    ๐ค ุชูููุฏ ุตูุช ูู ูุต ุจุงุณุชุฎุฏุงู gTTS (ูุฌุงูู ุจุงููุงูู)
    """
    try:
        logging.debug("๐ ุจุฏุก ุชูููุฏ ุงูุตูุช ุจุงุณุชุฎุฏุงู gTTS")
        logging.debug(f"๐ ุงููุต:\n{script_text}")
        logging.debug(f"๐ ุงููุบุฉ: {lang}")

        tts = gTTS(text=script_text, lang=lang)
        tts.save(str(VOICE_OUTPUT))

        logging.debug(f"โ ุชู ุญูุธ ุงูุตูุช ูู: {VOICE_OUTPUT}")
        return str(VOICE_OUTPUT)

    except Exception as e:
        logging.error(f"โ ุฎุทุฃ ุฃุซูุงุก ุชูููุฏ ุงูุตูุช: {e}")
        return None

# ๐งช ุงุฎุชุจุงุฑ ูุจุงุดุฑ
if _name_ == "_main_":
    text = "ูุฑุญุจูุง ุจู ูู ูุธุงู ุณุจูุฑุช ุณูู. ูุฐุง ูู ุงุฎุชุจุงุฑ ุชูููุฏ ุงูุตูุช."
    path = generate_voice_from_script(text, lang="ar")
    print(f"โ ุงูููู ุงููุงุชุฌ: {path}")
