name: Generate Client Video

on:
  workflow_dispatch:
    inputs:
      client:
        description: اسم مجلد العميل تحت content_studio/assets
        required: true
        default: demo_client
      fps:
        description: Frames per second
        required: true
        default: "30"
      seconds:
        description: JSON array e.g. [6,8,7]
        required: true
        default: "[6,8,7]"
      audio_url:
        description: Optional mp3/wav URL
        required: false
        default: ""
      use_runpod:
        description: Use RunPod/ComfyUI
        required: false
        default: "false"

jobs:
  build_video:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (use same ref as dispatch)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install deps (moviepy, pillow, ffmpeg, gTTS)
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade \
            moviepy==1.0.3 \
            pillow>=10.4.0 \
            imageio-ffmpeg>=0.4.8 \
            numpy \
            requests \
            tqdm \
            pydantic \
            gTTS==2.5.1 \
            pydub
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Prepare folders
        run: |
          mkdir -p tmp content_studio/ai_video/final_videos

      - name: Debug listing
        run: |
          echo "PWD: $(pwd)"
          echo "Branch/Ref: ${{ github.ref }}"
          echo "CLIENT=${{ github.event.inputs.client }}"
          ls -la
          ls -la content_studio || true
          ls -la content_studio/assets || true
          ls -la "content_studio/assets/${{ github.event.inputs.client }}" || true
          ls -la "content_studio/assets/${{ github.event.inputs.client }}/images" || true

      - name: Validate client assets
        env:
          CLIENT: ${{ github.event.inputs.client }}
        run: |
          set -e
          test -f "content_studio/assets/${CLIENT}/config.json"
          echo "✅ Found config for ${CLIENT}"

      - name: Build metadata.json from client config
        run: |
          python - <<'PY'
          import json
          from pathlib import Path
          client = "${{ github.event.inputs.client }}"
          with open(f"content_studio/assets/{client}/config.json", encoding="utf-8") as f:
              cfg = json.load(f)
          scenes = cfg.get("scenes", [])
          fps = int("${{ github.event.inputs.fps }}")
          seconds = json.loads('${{ github.event.inputs.seconds }}')
          images = [f"content_studio/assets/{client}/images/{s['image']}" for s in scenes]
          texts  = [s.get("text","") for s in scenes]
          meta = {
              "title": "Sport Sync",
              "subtitle": "",
              "fps": fps,
              "images": images,
              "seconds": seconds,
              "texts": texts
          }
          Path("tmp").mkdir(exist_ok=True)
          with open("tmp/metadata.json", "w", encoding="utf-8") as out:
              json.dump(meta, out, ensure_ascii=False, indent=2)
          print("Wrote tmp/metadata.json")
          PY

      - name: (Optional) Generate images via RunPod
        if: ${{ github.event.inputs.use_runpod == 'true' }}
        run: echo "Skipping cloud gen in this run"

      - name: Render video (no/with audio)
        run: |
          python content_studio/ai_video/generate_final_video.py \
            --meta tmp/metadata.json \
            --out content_studio/ai_video/final_videos/final_${{ github.event.inputs.client }}.mp4

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: final_video_${{ github.event.inputs.client }}
          path: content_studio/ai_video/final_videos/*.mp4
